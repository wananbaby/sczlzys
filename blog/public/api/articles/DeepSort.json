{"title":"DeepSort","uid":"6a3c94d65d19bc6f4ca6d8340f4b0187","slug":"DeepSort","date":"2021-06-29T03:30:11.000Z","updated":"2022-10-24T18:32:50.221Z","comments":true,"path":"api/articles/DeepSort.json","keywords":null,"cover":"https://cover.png","content":"<h2 id=\"deepsort算法原理以及代码解析\"><a href=\"#deepsort算法原理以及代码解析\" class=\"headerlink\" title=\"deepsort算法原理以及代码解析\"></a>deepsort算法原理以及代码解析</h2><h1 id=\"概述\"><a href=\"#概述\" class=\"headerlink\" title=\"概述\"></a>概述</h1><p>前边我们讲了sort算法的原理，并且指出了它的不足–IDsw过大，为了解决该问题，17年时候sort算法的团队又提出了DeepSort算法。Deepsort在原来Sort算法的基础上，改进了以下内容：</p>\n<ol>\n<li><strong>使用级联匹配算法</strong>：针对每一个检测器都会分配一个跟踪器，每个跟踪器会设定一个time_since_update参数。</li>\n<li>添加马氏距离与余弦距离：实际上是针对运动信息与外观信息的计算。</li>\n<li>添加深度学习特征：这一部分也就是ReID的模块，也是deepsort的亮点之一。</li>\n</ol>\n<h1 id=\"代码流程\"><a href=\"#代码流程\" class=\"headerlink\" title=\"代码流程\"></a>代码流程</h1><p>由于deepsort的流程和算法原理几乎和sort一样，只是说增加了上边三个特色，因此我们直接从代码开始讲起：</p>\n<h2 id=\"整体流程图\"><a href=\"#整体流程图\" class=\"headerlink\" title=\"整体流程图\"></a>整体流程图</h2><p>算法的整体流程图如下所示：</p>\n<p><img src=\"https://www.pianshen.com/images/545/b0cbe4ad215ed35dbfa132c1593046b1.png\" alt=\"2020-07-13_161051\"></p>\n<h2 id=\"源码流程\"><a href=\"#源码流程\" class=\"headerlink\" title=\"源码流程\"></a>源码流程</h2><p><img src=\"https://www.pianshen.com/images/71/af537dfceaf6fb81594cedfd5a3b3ac7.png\" alt=\"image-20200715113558645\"></p>\n<p>首先我们从主函数部分开始说起，主函数部分整体逻辑是比较简单的，首先是将命令行参数进行解析，解析的内容包括，MOTChanlleng序列文件所在路径、需要检测文件所在的目录等一系列参数。解析之后传递给run方法，开始运行。</p>\n<p><img src=\"https://www.pianshen.com/images/358/521cb662866e1c5064d97d3a7268117e.png\" alt=\"image-20200715113707665\"></p>\n<p>进入run函数之后，首先会收集流信息，包括图片名称，检测结果以及置信度等，后续会将这些流信息传入到检测框生成函数中，生成检测框列表。然后会初始化metric对象，metric对象简单来说就是度量方式，在这个地方我们可以选择两种相似度的度量方式，第一种叫做余弦相似度度量，另一种叫做欧拉相似度度量。通过metric对象我们来初始化追踪器。</p>\n<p><img src=\"https://www.pianshen.com/images/97/35311fdac87e487736b6129be9a03491.png\" alt=\"image-20200715113756738\"></p>\n<p>接着根据display参数开始生成对应的visuializer，如果选择将检测结果进行可视化展示，那么便会生成Visualization对象，我从这个类中可以看到，它主要是调用opencv image viewer来讲追踪的结果进行展示。如果display是false则会生成一个NoVisualization对象，它一个虚拟可视化对象，它以给定的顺序循环遍历所有帧以更新跟踪器，而无需执行任何可视化。两者主要区别其实就是是否调用opencv将图片展示出来。其实前边我们所做的一系列工作可以说都是准备的工作，实际上核心部分就是在执行这个run方法之后。此处我们可以看到，在run方法中传入了一个frame_callback函数，这个frame_callback函数可以说是整个算法的核心部分，每一帧的图片都会执行该函数。</p>\n<p><strong>为什么这样说那？</strong></p>\n<p>首先进入run函数之后我们会发现，无论当时选择是可视化操作还是非可视化操作，它的run函数最终都要调用frame_callback函数的，比如说Visualization中的run方法，它首先判断帧序号是否大于最大帧，如果大于最大帧，直接返回。否则回调执行frame_callback函数；同样的如果是NoVisualization对象，它的run方法也是类似的，也是调用frame_callback函数，然后帧序号加1。最后上边追踪结果处理完之后，然后将追踪的结果保存到对应的目录下边。</p>\n<p><img src=\"https://www.pianshen.com/images/438/f51ced2eb7760664b0a838d9469fbde6.png\" alt=\"image-20200715114107385\"></p>\n<p>上边我们说了frame_callback函数实际上是整个函数的核心内容。进入frame_callback函数，我们可以看到，它第一步是根据之前的参数，生成检测框列表，然后将置信度小于最小置信度阈值的检测框剔除掉。</p>\n<p><img src=\"https://www.pianshen.com/images/12/f2877155a8c21312f2fdc7a0b7bc5954.png\" alt=\"image-20200715114146972\"></p>\n<p>然后执行非极大值抑制。</p>\n<p>什么叫做非极大值抑制那？</p>\n<p>简单来说就是就是一个寻找局部最大值的过程，我们以下边检测框为例，我们可以看到在检测人脸的过程中可能会产生多个检测框，通过非极大值抑制，可以在局部范围内选择出那个得分最高的检测框，剔除掉其他得分低的检测框。</p>\n<p><img src=\"https://www.pianshen.com/images/250/07b49e0cf831a75397fa40c447c34cb2.png\" alt=\"image-20200715114206754\"></p>\n<p>接着调用predict函数执行预测操作，进入predict函数，我们可以看到，它其实主要就是对轨迹列表中所有的轨迹使用卡尔曼滤波算法进行状态的预测。接着调用update函数执行更新操作。在update函数中，主要如下几件事：</p>\n<ol>\n<li><p>根据之前预测的结果，进行匹配操作。在该开始匹配的时候都处于不确定态，然后若干次匹配之后，如果匹配成功的次数大于n_init的话，轨迹便会从初始态转换成确定态。如果一直没有匹配到检测框则会直接进入删除态。由于追踪的目标体可能会消失，因此就算进入到了确定态，如果在后续的匹配中多次没有匹配到，大于max_age的时候轨迹便会从确定态转换成删除态。一旦轨迹进入到删除态，则证明这个轨迹失效，后续便会被删除。</p>\n</li>\n<li><p>针对不同状态进行不同的操作</p>\n<p>a) 对未匹配的tracker,调用mark_missed标记，后续会删除对应的轨迹</p>\n<p>b) 针对未匹配的detection（检测框）。没有匹配到目标，因此检测框失配，进行初始化操作</p>\n<p>c) 更新轨迹列表，得到最新的tracks</p>\n<p>d) 更新处于确定态的trac_id</p>\n<p>e) 最后对特征集更新。</p>\n</li>\n</ol>\n<p>执行到此处当前帧的处理就完成了，直接帧序号加1，继续进行下一帧的操作。</p>\n<h1 id=\"结论\"><a href=\"#结论\" class=\"headerlink\" title=\"结论\"></a>结论</h1><p>最后我们将代码整体原理整理成树图如下：</p>\n<p>了便于大家阅读源码，我将源码的具体逻辑也整理成了一个树图：</p>\n<p><img src=\"https://www.pianshen.com/images/925/5056cf308b21f9ae021eb5509cea3f85.png\" alt=\"deep_sort_app\"></p>\n","feature":true,"text":"deepsort算法原理以及代码解析概述前边我们讲了sort算法的原理，并且指出了它的不足–IDsw过大，为了解决该问题，17年时候sort算法的团队又提出了DeepSort算法。Deepsort在原来Sort算法的基础上，改进了以下内容： 使用级联匹配算法：针对每一个检测器都会...","link":"","photos":[],"count_time":{"symbolsCount":"2k","symbolsTime":"2 mins."},"categories":[],"tags":[{"name":"DeepSort","slug":"DeepSort","count":1,"path":"api/tags/DeepSort.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#deepsort%E7%AE%97%E6%B3%95%E5%8E%9F%E7%90%86%E4%BB%A5%E5%8F%8A%E4%BB%A3%E7%A0%81%E8%A7%A3%E6%9E%90\"><span class=\"toc-text\">deepsort算法原理以及代码解析</span></a></li></ol></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#%E6%A6%82%E8%BF%B0\"><span class=\"toc-text\">概述</span></a></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#%E4%BB%A3%E7%A0%81%E6%B5%81%E7%A8%8B\"><span class=\"toc-text\">代码流程</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E6%95%B4%E4%BD%93%E6%B5%81%E7%A8%8B%E5%9B%BE\"><span class=\"toc-text\">整体流程图</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E6%BA%90%E7%A0%81%E6%B5%81%E7%A8%8B\"><span class=\"toc-text\">源码流程</span></a></li></ol></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#%E7%BB%93%E8%AE%BA\"><span class=\"toc-text\">结论</span></a>","author":{"name":"zys","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"新的个人博客","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{"GitHub":{"icon":"https://iconfont.alicdn.com/t/a1b9c55d-637b-4523-b97e-7f266cae53ef.png","link":"https://github.com/wananbaby"},"网址":{"icon":"https://iconfont.alicdn.com/t/a1b9c55d-637b-4523-b97e-7f266cae53ef.png","link":"https://www.sczlzys.com"}}}},"mapped":true,"prev_post":{},"next_post":{"title":"stock","uid":"1e87a22e785830f69dd6b9ccb5e2aff9","slug":"stock","date":"2021-06-07T10:39:07.000Z","updated":"2022-10-24T18:32:50.223Z","comments":true,"path":"api/articles/stock.json","keywords":null,"cover":"https://cover.png","text":"金融量化交易金融基本概念股市指的是股票市场，股票市场指的是已经发行的股票转让、买卖和流通的场所，包括交易所市场和场外交易市场两大类别。它是建立在发行市场基础上的，又称作二级市场。 股市分为投资和投机投资投的是资产，利润来自于资产的增值服务或者生产产品。具有长线持有的特点。投机投的...","link":"","photos":[],"count_time":{"symbolsCount":"16k","symbolsTime":"15 mins."},"categories":[],"tags":[{"name":"stock","slug":"stock","count":1,"path":"api/tags/stock.json"}],"author":{"name":"zys","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"新的个人博客","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{"GitHub":{"icon":"https://iconfont.alicdn.com/t/a1b9c55d-637b-4523-b97e-7f266cae53ef.png","link":"https://github.com/wananbaby"},"网址":{"icon":"https://iconfont.alicdn.com/t/a1b9c55d-637b-4523-b97e-7f266cae53ef.png","link":"https://www.sczlzys.com"}}}},"feature":true}}